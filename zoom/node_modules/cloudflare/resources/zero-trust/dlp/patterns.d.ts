import * as Core from 'cloudflare/core';
import { APIResource } from 'cloudflare/resource';
import * as PatternsAPI from 'cloudflare/resources/zero-trust/dlp/patterns';
import * as OwnershipAPI from 'cloudflare/resources/logpush/ownership';
export declare class Patterns extends APIResource {
    /**
     * Validates whether this pattern is a valid regular expression. Rejects it if the
     * regular expression is too complex or can match an unbounded-length string. Your
     * regex will be rejected if it uses the Kleene Star -- be sure to bound the
     * maximum number of characters that can be matched.
     */
    validate(params: PatternValidateParams, options?: Core.RequestOptions): Core.APIPromise<OwnershipAPI.OwnershipValidation | null>;
}
export interface PatternValidateParams {
    /**
     * Path param: Identifier
     */
    account_id: string;
    /**
     * Body param: The regex pattern.
     */
    regex: string;
}
export declare namespace Patterns {
    export import PatternValidateParams = PatternsAPI.PatternValidateParams;
}
//# sourceMappingURL=patterns.d.ts.map