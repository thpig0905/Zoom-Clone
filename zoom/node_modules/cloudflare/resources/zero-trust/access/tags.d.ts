import * as Core from 'cloudflare/core';
import { APIResource } from 'cloudflare/resource';
import * as TagsAPI from 'cloudflare/resources/zero-trust/access/tags';
import { SinglePage } from 'cloudflare/pagination';
export declare class Tags extends APIResource {
    /**
     * Create a tag
     */
    create(identifier: string, body: TagCreateParams, options?: Core.RequestOptions): Core.APIPromise<Tag>;
    /**
     * Update a tag
     */
    update(identifier: string, tagName: string, body: TagUpdateParams, options?: Core.RequestOptions): Core.APIPromise<Tag>;
    /**
     * List tags
     */
    list(identifier: string, options?: Core.RequestOptions): Core.PagePromise<TagsSinglePage, Tag>;
    /**
     * Delete a tag
     */
    delete(identifier: string, name: string, options?: Core.RequestOptions): Core.APIPromise<TagDeleteResponse>;
    /**
     * Get a tag
     */
    get(identifier: string, name: string, options?: Core.RequestOptions): Core.APIPromise<Tag>;
}
export declare class TagsSinglePage extends SinglePage<Tag> {
}
/**
 * A tag
 */
export interface Tag {
    /**
     * The name of the tag
     */
    name: string;
    /**
     * The number of applications that have this tag
     */
    app_count?: number;
    created_at?: string;
    updated_at?: string;
}
export interface TagDeleteResponse {
    /**
     * The name of the tag
     */
    name?: string;
}
export interface TagCreateParams {
    /**
     * The name of the tag
     */
    name: string;
}
export interface TagUpdateParams {
    /**
     * The name of the tag
     */
    name: string;
}
export declare namespace Tags {
    export import Tag = TagsAPI.Tag;
    export import TagDeleteResponse = TagsAPI.TagDeleteResponse;
    export import TagsSinglePage = TagsAPI.TagsSinglePage;
    export import TagCreateParams = TagsAPI.TagCreateParams;
    export import TagUpdateParams = TagsAPI.TagUpdateParams;
}
//# sourceMappingURL=tags.d.ts.map