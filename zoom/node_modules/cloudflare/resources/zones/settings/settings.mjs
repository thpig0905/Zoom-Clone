// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from 'cloudflare/resource';
import * as AdvancedDDoSAPI from 'cloudflare/resources/zones/settings/advanced-ddos';
import * as AlwaysOnlineAPI from 'cloudflare/resources/zones/settings/always-online';
import * as AlwaysUseHTTPSAPI from 'cloudflare/resources/zones/settings/always-use-https';
import * as AutomaticHTTPSRewritesAPI from 'cloudflare/resources/zones/settings/automatic-https-rewrites';
import * as AutomaticPlatformOptimizationAPI from 'cloudflare/resources/zones/settings/automatic-platform-optimization';
import * as BrotliAPI from 'cloudflare/resources/zones/settings/brotli';
import * as BrowserCacheTTLAPI from 'cloudflare/resources/zones/settings/browser-cache-ttl';
import * as BrowserCheckAPI from 'cloudflare/resources/zones/settings/browser-check';
import * as CacheLevelAPI from 'cloudflare/resources/zones/settings/cache-level';
import * as ChallengeTTLAPI from 'cloudflare/resources/zones/settings/challenge-ttl';
import * as CiphersAPI from 'cloudflare/resources/zones/settings/ciphers';
import * as DevelopmentModeAPI from 'cloudflare/resources/zones/settings/development-mode';
import * as EarlyHintsAPI from 'cloudflare/resources/zones/settings/early-hints';
import * as EmailObfuscationAPI from 'cloudflare/resources/zones/settings/email-obfuscation';
import * as FontSettingsAPI from 'cloudflare/resources/zones/settings/font-settings';
import * as H2PrioritizationAPI from 'cloudflare/resources/zones/settings/h2-prioritization';
import * as HotlinkProtectionAPI from 'cloudflare/resources/zones/settings/hotlink-protection';
import * as HTTP2API from 'cloudflare/resources/zones/settings/http2';
import * as HTTP3API from 'cloudflare/resources/zones/settings/http3';
import * as ImageResizingAPI from 'cloudflare/resources/zones/settings/image-resizing';
import * as IPGeolocationAPI from 'cloudflare/resources/zones/settings/ip-geolocation';
import * as IPV6API from 'cloudflare/resources/zones/settings/ipv6';
import * as MinTLSVersionAPI from 'cloudflare/resources/zones/settings/min-tls-version';
import * as MinifyAPI from 'cloudflare/resources/zones/settings/minify';
import * as MirageAPI from 'cloudflare/resources/zones/settings/mirage';
import * as MobileRedirectAPI from 'cloudflare/resources/zones/settings/mobile-redirect';
import * as NELAPI from 'cloudflare/resources/zones/settings/nel';
import * as OpportunisticEncryptionAPI from 'cloudflare/resources/zones/settings/opportunistic-encryption';
import * as OpportunisticOnionAPI from 'cloudflare/resources/zones/settings/opportunistic-onion';
import * as OrangeToOrangeAPI from 'cloudflare/resources/zones/settings/orange-to-orange';
import * as OriginErrorPagePassThruAPI from 'cloudflare/resources/zones/settings/origin-error-page-pass-thru';
import * as OriginMaxHTTPVersionAPI from 'cloudflare/resources/zones/settings/origin-max-http-version';
import * as PolishAPI from 'cloudflare/resources/zones/settings/polish';
import * as PrefetchPreloadAPI from 'cloudflare/resources/zones/settings/prefetch-preload';
import * as ProxyReadTimeoutAPI from 'cloudflare/resources/zones/settings/proxy-read-timeout';
import * as PseudoIPV4API from 'cloudflare/resources/zones/settings/pseudo-ipv4';
import * as ResponseBufferingAPI from 'cloudflare/resources/zones/settings/response-buffering';
import * as RocketLoaderAPI from 'cloudflare/resources/zones/settings/rocket-loader';
import * as SecurityHeadersAPI from 'cloudflare/resources/zones/settings/security-headers';
import * as SecurityLevelAPI from 'cloudflare/resources/zones/settings/security-level';
import * as ServerSideExcludesAPI from 'cloudflare/resources/zones/settings/server-side-excludes';
import * as SortQueryStringForCacheAPI from 'cloudflare/resources/zones/settings/sort-query-string-for-cache';
import * as SSLAPI from 'cloudflare/resources/zones/settings/ssl';
import * as SSLRecommenderAPI from 'cloudflare/resources/zones/settings/ssl-recommender';
import * as TLS1_3API from 'cloudflare/resources/zones/settings/tls-1-3';
import * as TLSClientAuthAPI from 'cloudflare/resources/zones/settings/tls-client-auth';
import * as TrueClientIPHeaderAPI from 'cloudflare/resources/zones/settings/true-client-ip-header';
import * as WAFAPI from 'cloudflare/resources/zones/settings/waf';
import * as WebPAPI from 'cloudflare/resources/zones/settings/webp';
import * as WebsocketAPI from 'cloudflare/resources/zones/settings/websocket';
import * as ZeroRTTAPI from 'cloudflare/resources/zones/settings/zero-rtt';
export class Settings extends APIResource {
    constructor() {
        super(...arguments);
        this.zeroRTT = new ZeroRTTAPI.ZeroRTTResource(this._client);
        this.advancedDDoS = new AdvancedDDoSAPI.AdvancedDDoS(this._client);
        this.alwaysOnline = new AlwaysOnlineAPI.AlwaysOnlineResource(this._client);
        this.alwaysUseHTTPS = new AlwaysUseHTTPSAPI.AlwaysUseHTTPS(this._client);
        this.automaticHTTPSRewrites = new AutomaticHTTPSRewritesAPI.AutomaticHTTPSRewrites(this._client);
        this.automaticPlatformOptimization = new AutomaticPlatformOptimizationAPI.AutomaticPlatformOptimizationResource(this._client);
        this.brotli = new BrotliAPI.BrotliResource(this._client);
        this.browserCacheTTL = new BrowserCacheTTLAPI.BrowserCacheTTLResource(this._client);
        this.browserCheck = new BrowserCheckAPI.BrowserCheckResource(this._client);
        this.cacheLevel = new CacheLevelAPI.CacheLevelResource(this._client);
        this.challengeTTL = new ChallengeTTLAPI.ChallengeTTLResource(this._client);
        this.ciphers = new CiphersAPI.Ciphers(this._client);
        this.developmentMode = new DevelopmentModeAPI.DevelopmentModeResource(this._client);
        this.earlyHints = new EarlyHintsAPI.EarlyHints(this._client);
        this.emailObfuscation = new EmailObfuscationAPI.EmailObfuscationResource(this._client);
        this.h2Prioritization = new H2PrioritizationAPI.H2PrioritizationResource(this._client);
        this.hotlinkProtection = new HotlinkProtectionAPI.HotlinkProtectionResource(this._client);
        this.http2 = new HTTP2API.HTTP2Resource(this._client);
        this.http3 = new HTTP3API.HTTP3Resource(this._client);
        this.imageResizing = new ImageResizingAPI.ImageResizingResource(this._client);
        this.ipGeolocation = new IPGeolocationAPI.IPGeolocationResource(this._client);
        this.ipv6 = new IPV6API.IPV6Resource(this._client);
        this.minTLSVersion = new MinTLSVersionAPI.MinTLSVersionResource(this._client);
        this.minify = new MinifyAPI.MinifyResource(this._client);
        this.mirage = new MirageAPI.MirageResource(this._client);
        this.mobileRedirect = new MobileRedirectAPI.MobileRedirectResource(this._client);
        this.nel = new NELAPI.NELResource(this._client);
        this.opportunisticEncryption = new OpportunisticEncryptionAPI.OpportunisticEncryptionResource(this._client);
        this.opportunisticOnion = new OpportunisticOnionAPI.OpportunisticOnionResource(this._client);
        this.orangeToOrange = new OrangeToOrangeAPI.OrangeToOrangeResource(this._client);
        this.originErrorPagePassThru = new OriginErrorPagePassThruAPI.OriginErrorPagePassThruResource(this._client);
        this.originMaxHTTPVersion = new OriginMaxHTTPVersionAPI.OriginMaxHTTPVersionResource(this._client);
        this.polish = new PolishAPI.PolishResource(this._client);
        this.prefetchPreload = new PrefetchPreloadAPI.PrefetchPreloadResource(this._client);
        this.proxyReadTimeout = new ProxyReadTimeoutAPI.ProxyReadTimeoutResource(this._client);
        this.pseudoIPV4 = new PseudoIPV4API.PseudoIPV4Resource(this._client);
        this.responseBuffering = new ResponseBufferingAPI.ResponseBufferingResource(this._client);
        this.rocketLoader = new RocketLoaderAPI.RocketLoaderResource(this._client);
        this.securityHeaders = new SecurityHeadersAPI.SecurityHeaders(this._client);
        this.securityLevel = new SecurityLevelAPI.SecurityLevelResource(this._client);
        this.serverSideExcludes = new ServerSideExcludesAPI.ServerSideExcludes(this._client);
        this.sortQueryStringForCache = new SortQueryStringForCacheAPI.SortQueryStringForCacheResource(this._client);
        this.ssl = new SSLAPI.SSLResource(this._client);
        this.sslRecommender = new SSLRecommenderAPI.SSLRecommenderResource(this._client);
        this.tls1_3 = new TLS1_3API.TLS1_3Resource(this._client);
        this.tlsClientAuth = new TLSClientAuthAPI.TLSClientAuthResource(this._client);
        this.trueClientIPHeader = new TrueClientIPHeaderAPI.TrueClientIPHeaderResource(this._client);
        this.waf = new WAFAPI.WAFResource(this._client);
        this.WebP = new WebPAPI.WebPResource(this._client);
        this.websocket = new WebsocketAPI.WebsocketResource(this._client);
        this.fontSettings = new FontSettingsAPI.FontSettings(this._client);
    }
}
(function (Settings) {
    Settings.ZeroRTTResource = ZeroRTTAPI.ZeroRTTResource;
    Settings.AdvancedDDoS = AdvancedDDoSAPI.AdvancedDDoS;
    Settings.AlwaysOnlineResource = AlwaysOnlineAPI.AlwaysOnlineResource;
    Settings.AlwaysUseHTTPS = AlwaysUseHTTPSAPI.AlwaysUseHTTPS;
    Settings.AutomaticHTTPSRewrites = AutomaticHTTPSRewritesAPI.AutomaticHTTPSRewrites;
    Settings.AutomaticPlatformOptimizationResource = AutomaticPlatformOptimizationAPI.AutomaticPlatformOptimizationResource;
    Settings.BrotliResource = BrotliAPI.BrotliResource;
    Settings.BrowserCacheTTLResource = BrowserCacheTTLAPI.BrowserCacheTTLResource;
    Settings.BrowserCheckResource = BrowserCheckAPI.BrowserCheckResource;
    Settings.CacheLevelResource = CacheLevelAPI.CacheLevelResource;
    Settings.ChallengeTTLResource = ChallengeTTLAPI.ChallengeTTLResource;
    Settings.Ciphers = CiphersAPI.Ciphers;
    Settings.DevelopmentModeResource = DevelopmentModeAPI.DevelopmentModeResource;
    Settings.EarlyHints = EarlyHintsAPI.EarlyHints;
    Settings.EmailObfuscationResource = EmailObfuscationAPI.EmailObfuscationResource;
    Settings.H2PrioritizationResource = H2PrioritizationAPI.H2PrioritizationResource;
    Settings.HotlinkProtectionResource = HotlinkProtectionAPI.HotlinkProtectionResource;
    Settings.HTTP2Resource = HTTP2API.HTTP2Resource;
    Settings.HTTP3Resource = HTTP3API.HTTP3Resource;
    Settings.ImageResizingResource = ImageResizingAPI.ImageResizingResource;
    Settings.IPGeolocationResource = IPGeolocationAPI.IPGeolocationResource;
    Settings.IPV6Resource = IPV6API.IPV6Resource;
    Settings.MinTLSVersionResource = MinTLSVersionAPI.MinTLSVersionResource;
    Settings.MinifyResource = MinifyAPI.MinifyResource;
    Settings.MirageResource = MirageAPI.MirageResource;
    Settings.MobileRedirectResource = MobileRedirectAPI.MobileRedirectResource;
    Settings.NELResource = NELAPI.NELResource;
    Settings.OpportunisticEncryptionResource = OpportunisticEncryptionAPI.OpportunisticEncryptionResource;
    Settings.OpportunisticOnionResource = OpportunisticOnionAPI.OpportunisticOnionResource;
    Settings.OrangeToOrangeResource = OrangeToOrangeAPI.OrangeToOrangeResource;
    Settings.OriginErrorPagePassThruResource = OriginErrorPagePassThruAPI.OriginErrorPagePassThruResource;
    Settings.OriginMaxHTTPVersionResource = OriginMaxHTTPVersionAPI.OriginMaxHTTPVersionResource;
    Settings.PolishResource = PolishAPI.PolishResource;
    Settings.PrefetchPreloadResource = PrefetchPreloadAPI.PrefetchPreloadResource;
    Settings.ProxyReadTimeoutResource = ProxyReadTimeoutAPI.ProxyReadTimeoutResource;
    Settings.PseudoIPV4Resource = PseudoIPV4API.PseudoIPV4Resource;
    Settings.ResponseBufferingResource = ResponseBufferingAPI.ResponseBufferingResource;
    Settings.RocketLoaderResource = RocketLoaderAPI.RocketLoaderResource;
    Settings.SecurityHeaders = SecurityHeadersAPI.SecurityHeaders;
    Settings.SecurityLevelResource = SecurityLevelAPI.SecurityLevelResource;
    Settings.ServerSideExcludes = ServerSideExcludesAPI.ServerSideExcludes;
    Settings.SortQueryStringForCacheResource = SortQueryStringForCacheAPI.SortQueryStringForCacheResource;
    Settings.SSLResource = SSLAPI.SSLResource;
    Settings.SSLRecommenderResource = SSLRecommenderAPI.SSLRecommenderResource;
    Settings.TLS1_3Resource = TLS1_3API.TLS1_3Resource;
    Settings.TLSClientAuthResource = TLSClientAuthAPI.TLSClientAuthResource;
    Settings.TrueClientIPHeaderResource = TrueClientIPHeaderAPI.TrueClientIPHeaderResource;
    Settings.WAFResource = WAFAPI.WAFResource;
    Settings.WebPResource = WebPAPI.WebPResource;
    Settings.WebsocketResource = WebsocketAPI.WebsocketResource;
    Settings.FontSettings = FontSettingsAPI.FontSettings;
})(Settings || (Settings = {}));
//# sourceMappingURL=settings.mjs.map