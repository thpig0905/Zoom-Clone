import * as Core from 'cloudflare/core';
import { APIResource } from 'cloudflare/resource';
import * as LogsAPI from 'cloudflare/resources/ai-gateway/logs';
export declare class Logs extends APIResource {
    /**
     * List Gateway Logs
     */
    get(id: string, params: LogGetParams, options?: Core.RequestOptions): Core.APIPromise<LogGetResponse>;
}
export type LogGetResponse = Array<LogGetResponse.LogGetResponseItem>;
export declare namespace LogGetResponse {
    interface LogGetResponseItem {
        id: string;
        cached: boolean;
        created_at: string;
        duration: number;
        model: string;
        path: string;
        provider: string;
        request: string;
        response: string;
        success: boolean;
        tokens_in: number;
        tokens_out: number;
    }
}
export interface LogGetParams {
    /**
     * Path param:
     */
    account_id: string;
    /**
     * Query param:
     */
    cached?: boolean;
    /**
     * Query param:
     */
    direction?: 'asc' | 'desc';
    /**
     * Query param:
     */
    end_date?: string;
    /**
     * Query param:
     */
    order_by?: 'created_at' | 'provider';
    /**
     * Query param:
     */
    page?: number;
    /**
     * Query param:
     */
    per_page?: number;
    /**
     * Query param:
     */
    search?: string;
    /**
     * Query param:
     */
    start_date?: string;
    /**
     * Query param:
     */
    success?: boolean;
}
export declare namespace Logs {
    export import LogGetResponse = LogsAPI.LogGetResponse;
    export import LogGetParams = LogsAPI.LogGetParams;
}
//# sourceMappingURL=logs.d.ts.map