// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from 'cloudflare/resource';
import * as ConnectionTamperingAPI from 'cloudflare/resources/radar/connection-tampering';
import * as DatasetsAPI from 'cloudflare/resources/radar/datasets';
import * as SearchAPI from 'cloudflare/resources/radar/search';
import * as AnnotationsAPI from 'cloudflare/resources/radar/annotations/annotations';
import * as AS112API from 'cloudflare/resources/radar/as112/as112';
import * as AttacksAPI from 'cloudflare/resources/radar/attacks/attacks';
import * as BGPAPI from 'cloudflare/resources/radar/bgp/bgp';
import * as DNSAPI from 'cloudflare/resources/radar/dns/dns';
import * as EmailAPI from 'cloudflare/resources/radar/email/email';
import * as EntitiesAPI from 'cloudflare/resources/radar/entities/entities';
import * as HTTPAPI from 'cloudflare/resources/radar/http/http';
import * as NetflowsAPI from 'cloudflare/resources/radar/netflows/netflows';
import * as QualityAPI from 'cloudflare/resources/radar/quality/quality';
import * as RankingAPI from 'cloudflare/resources/radar/ranking/ranking';
import * as TrafficAnomaliesAPI from 'cloudflare/resources/radar/traffic-anomalies/traffic-anomalies';
import * as VerifiedBotsAPI from 'cloudflare/resources/radar/verified-bots/verified-bots';
export class Radar extends APIResource {
    constructor() {
        super(...arguments);
        this.annotations = new AnnotationsAPI.Annotations(this._client);
        this.bgp = new BGPAPI.BGP(this._client);
        this.datasets = new DatasetsAPI.Datasets(this._client);
        this.dns = new DNSAPI.DNS(this._client);
        this.netflows = new NetflowsAPI.Netflows(this._client);
        this.search = new SearchAPI.Search(this._client);
        this.verifiedBots = new VerifiedBotsAPI.VerifiedBots(this._client);
        this.as112 = new AS112API.AS112(this._client);
        this.connectionTampering = new ConnectionTamperingAPI.ConnectionTampering(this._client);
        this.email = new EmailAPI.Email(this._client);
        this.attacks = new AttacksAPI.Attacks(this._client);
        this.entities = new EntitiesAPI.Entities(this._client);
        this.http = new HTTPAPI.HTTP(this._client);
        this.quality = new QualityAPI.Quality(this._client);
        this.ranking = new RankingAPI.Ranking(this._client);
        this.trafficAnomalies = new TrafficAnomaliesAPI.TrafficAnomalies(this._client);
    }
}
(function (Radar) {
    Radar.Annotations = AnnotationsAPI.Annotations;
    Radar.BGP = BGPAPI.BGP;
    Radar.Datasets = DatasetsAPI.Datasets;
    Radar.DNS = DNSAPI.DNS;
    Radar.Netflows = NetflowsAPI.Netflows;
    Radar.Search = SearchAPI.Search;
    Radar.VerifiedBots = VerifiedBotsAPI.VerifiedBots;
    Radar.AS112 = AS112API.AS112;
    Radar.ConnectionTampering = ConnectionTamperingAPI.ConnectionTampering;
    Radar.Email = EmailAPI.Email;
    Radar.Attacks = AttacksAPI.Attacks;
    Radar.Entities = EntitiesAPI.Entities;
    Radar.HTTP = HTTPAPI.HTTP;
    Radar.Quality = QualityAPI.Quality;
    Radar.Ranking = RankingAPI.Ranking;
    Radar.TrafficAnomalies = TrafficAnomaliesAPI.TrafficAnomalies;
})(Radar || (Radar = {}));
//# sourceMappingURL=radar.mjs.map